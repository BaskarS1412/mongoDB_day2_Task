Design database for Zen class programme:


                    test> use zenclass;
                    switched to db zenclass
                    zenclass> db.createCollection("users");
                    { ok: 1 }
                    zenclass> db.createCollection("codekata");
                    { ok: 1 }
                    zenclass> db.createCollection("attendance");
                    { ok: 1 }
                    zenclass> db.createCollection("topics");
                    { ok: 1 }
                    zenclass> db.createCollection("tasks");
                    { ok: 1 }
                    zenclass> db.createCollection("company_drives");
                    { ok: 1 }
                    zenclass> db.createCollection("mentors");


users -----> Collections:

                    db.users.insertMany([{'user_id':1, 'user_name':'bala','email_id':'ala@gmail.com','batch_id':14,'codekata_solved':[1,2,3,4,5,6,7,8,9,10]},
                    {'user_id':2,'user_name':'gokul NS','email_id':'gokulns@gmail.com','batch_id':14,'codekata_solved':[5,6,7,8]},
                    {'user_id':3,'user_name':'manikandan','email_id':'mani145@gmail.com','batch_id':14,'codekata_solved':[2,3,5,8]},
                    {'user_id':4,'user_name':'naveenkumar','email_id':'naveenkumae78@gmail.com','batch_id':14,'codekata_solved':[4,5,6,7]},
                    {'user_id':5,'user_name':'dharumkumar','email_id':'dharun547@gmail.com','batch_id':14,'codekata_solved':[1,2,3,4,5]},
                    {'user_id':6,'user_name':'dinesh','email_id':'dinesh532@gmail.com','batch_id':14,'codekata_solved':[1,2,3]},
                    {'user_id':7,'user_name':'ramkumar','email_id':'ramkumar@gmail.com','batch_id':14,'codekata_solved':[5,6,7,8,9,10]}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f0790f3c6c6cbe664bec0f'),
                        '1': ObjectId('65f0790f3c6c6cbe664bec10'),
                        '2': ObjectId('65f0790f3c6c6cbe664bec11'),
                        '3': ObjectId('65f0790f3c6c6cbe664bec12'),
                        '4': ObjectId('65f0790f3c6c6cbe664bec13'),
                        '5': ObjectId('65f0790f3c6c6cbe664bec14'),
                        '6': ObjectId('65f0790f3c6c6cbe664bec15')
                    }
                    }


codekata -------> Collections:

                    db.codekata.insertMany([{'prolem_id':1,'catagory_name':'Input/Output','description':'Write a code to get the input in the given format and print the output in the given format.'},
                    {'prolem_id':2,'catagory_name':'absolute beginner','description':'Write a code to get 2 integers as input and find the HCF of the 2 integer without using recursion or Euclidean algorithm.'},
                    {'prolem_id':3,'catagory_name':'Array','description':'You are provided with an array in which all elements are repeated thrice except one which is repeated twice.Your task is to print that number.'},
                    {'prolem_id':4,'catagory_name':'mathematics','description':'Given a number N, find the nearest greater multiple of 10.Input Size : N <= 10000'},
                    {'prolem_id':5,'catagory_name':'String','description':'You are given some words all in lower case letters your task is to print them in sorted order.'},
                    {'prolem_id':6,'catagory_name':'Basics','description':'Given a number N and an array of N elements, find the Bitwise OR of the array elements.'},
                    {'prolem_id':7,'catagory_name':'Looping','description':'Write a code to get an integer N and print the even values from 1 till N in a separate line.'},
                    {'prolem_id':8,'catagory_name':'Numbers','description':'A ground of a number is defined as the number which is just smaller or equal to the number given to you.Hence he started solving some assignments related to it. He got struck in some questions. Your task is to help him.'},
                    {'prolem_id':9,'catagory_name':'Sorting','description':'You are given a number ‘n’. Your task is to create the smallest number possible using the digits of number. The number should be of the same length as the orignal input number.'},
                    {'prolem_id':10,'catagory_name':'Pattern','description':'Write a code to generate a aplhabet half pyramid pattern.'}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f088f73c6c6cbe664bec16'),
                        '1': ObjectId('65f088f73c6c6cbe664bec17'),
                        '2': ObjectId('65f088f73c6c6cbe664bec18'),
                        '3': ObjectId('65f088f73c6c6cbe664bec19'),
                        '4': ObjectId('65f088f73c6c6cbe664bec1a'),
                        '5': ObjectId('65f088f73c6c6cbe664bec1b'),
                        '6': ObjectId('65f088f73c6c6cbe664bec1c'),
                        '7': ObjectId('65f088f73c6c6cbe664bec1d'),
                        '8': ObjectId('65f088f73c6c6cbe664bec1e'),
                        '9': ObjectId('65f088f73c6c6cbe664bec1f')
                    }
                    }


attendance--------> Collections:

                    db.attendance.insertMany([{'session_id':1,'date':new Date('2024-01-02'),'present':[1,2,4,5],'absent':[3]},
                    {'session_id':2,'date':new Date('2024-01-03'),'present':[3,4,5],'absent':[1,2]},
                    {'session_id':3,'date':new Date('2024-01-04'),'present':[1,2,5],'absent':[3,4]},
                    {'session_id':4,'date':new Date('2024-01-05'),'present':[1,2,3,5],'absent':[4]},
                    {'session_id':5,'date':new Date('2024-01-06'),'present':[1,4],'absent':[2,3,5]},
                    {'session_id':6,'date':new Date('2024-01-07'),'present':[1,2,4],'absent':[3,5]},
                    {'session_id':7,'date':new Date('2024-01-08'),'present':[1,2,3,4],'absent':[5]},
                    {'session_id':8,'date':new Date('2024-01-09'),'present':[2,4,5],'absent':[1,3]},
                    {'session_id':9,'date':new Date('2024-01-10'),'present':[1,2,4,5],'absent':[3]},
                    {'session_id':10,'date':new Date('2024-01-10'),'present':[4,5],'absent':[1,2,3]}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f08b573c6c6cbe664bec20'),
                        '1': ObjectId('65f08b573c6c6cbe664bec21'),
                        '2': ObjectId('65f08b573c6c6cbe664bec22'),
                        '3': ObjectId('65f08b573c6c6cbe664bec23'),
                        '4': ObjectId('65f08b573c6c6cbe664bec24'),
                        '5': ObjectId('65f08b573c6c6cbe664bec25'),
                        '6': ObjectId('65f08b573c6c6cbe664bec26'),
                        '7': ObjectId('65f08b573c6c6cbe664bec27'),
                        '8': ObjectId('65f08b573c6c6cbe664bec28'),
                        '9': ObjectId('65f08b573c6c6cbe664bec29')
                    }
                    }



topics---------> Collections:

                    db.topics.insertMany([{'id':1,'name':'HTML','description':'HTML','date':new Date('2020-10-15')},
                    {'id':2,'name':'CSS','description':'CSS','date':new Date('2020-10-16')},
                    {'id':3,'name':'Javascript','description':'Javascript','date':new Date('2020-10-17')},
                    {'id':4,'name':'ReactJS','description':'ReactJS','date':new Date('2020-10-18')},
                    {'id':5,'name':'nodeJS','description':'nodeJS','date':new Date('2020-10-19')},
                    {'id':6,'name':'Java','description':'java','date':new Date('2020-10-20')},
                    {'id':7,'name':'python','description':'python','date':new Date('2020-10-21')},
                    {'id':8,'name':'MYSQL','description':'MYSQL','date':new Date('2020-10-22')},
                    {'id':9,'name':'MongoDB','description':'MongoDB','date':new Date('2020-10-23')},
                    {'id':10,'name':'spring_boot','description':'spring_boot','date':new Date('2020-10-24')}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f096963c6c6cbe664bec2a'),
                        '1': ObjectId('65f096963c6c6cbe664bec2b'),
                        '2': ObjectId('65f096963c6c6cbe664bec2c'),
                        '3': ObjectId('65f096963c6c6cbe664bec2d'),
                        '4': ObjectId('65f096963c6c6cbe664bec2e'),
                        '5': ObjectId('65f096963c6c6cbe664bec2f'),
                        '6': ObjectId('65f096963c6c6cbe664bec30'),
                        '7': ObjectId('65f096963c6c6cbe664bec31'),
                        '8': ObjectId('65f096963c6c6cbe664bec32'),
                        '9': ObjectId('65f096963c6c6cbe664bec33')
                    }
                    }



tasks-------------> Collections:


                    db.tasks.insertMany([{'task_id':1,'name':'HTML','description':'to design forms','date':new Date('2020-10-16'),'submitted':[1,3,4,5],'not_submitted':[2]},
                    {'task_id':2,'name':'CSS','description':'to design page resposiveness','date':new Date('2020-10-17'),'submitted':[1,3,5],'not_submitted':[2,4]},
                    {'task_id':3,'name':'Javascript','description':'to fetch the data from rest api','date':new Date('2020-10-18'),'submitted':[3,4,5],'not_submitted':[1,2]},
                    {'task_id':4,'name':'reactJS','description':'using router in ecommes web sites','date':new Date('2020-10-19'),'submitted':[1,2,3,4],'not_submitted':[5]},
                    {'task_id':5,'name':'java','description':'libery management sysyem','date':new Date('2020-10-20'),'submitted':[1,4,5],'not_submitted':[2,3]},
                    {'task_id':6,'name':'SQL','description':'write a joind query','date':new Date('2020-10-21'),'submitted':[1,2,3],'not_submitted':[4,5]},
                    {'task_id':7,'name':'MongoDb','description':'to create collections','date':new Date('2020-10-22'),'submitted':[1,3,4,5],'not_submitted':[2]},
                    {'task_id':8,'name':'python','description':'crud operation','date':new Date('2020-10-23'),'submitted':[1,5],'not_submitted':[2,3,4]},
                    {'task_id':9,'name':'sprig boot','description':'to connect DBMS','date':new Date('2020-10-24'),'submitted':[1,3,4,5],'not_submitted':[2]},
                    {'task_id':10,'name':'php','description':'to write a code on php','date':new Date('2020-10-25'),'submitted':[1,3,4,5],'not_submitted':[2]}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f09b5d3c6c6cbe664bec3e'),
                        '1': ObjectId('65f09b5d3c6c6cbe664bec3f'),
                        '2': ObjectId('65f09b5d3c6c6cbe664bec40'),
                        '3': ObjectId('65f09b5d3c6c6cbe664bec41'),
                        '4': ObjectId('65f09b5d3c6c6cbe664bec42'),
                        '5': ObjectId('65f09b5d3c6c6cbe664bec43'),
                        '6': ObjectId('65f09b5d3c6c6cbe664bec44'),
                        '7': ObjectId('65f09b5d3c6c6cbe664bec45'),
                        '8': ObjectId('65f09b5d3c6c6cbe664bec46'),
                        '9': ObjectId('65f09b5d3c6c6cbe664bec47')
                    }
                    }


company_drives----------> collections:


                    db.company_drives.insertMany([{'id':1,'company_name':'zoho','date':new Date('2020-10-07'),'student_id':[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]},
                    {'id':2,'company_name':'CTS','date':new Date('2020-10-10'),'student_id':[9,10,11,12,13,14,15]},
                    {'id':3,'company_name':'Amazon','date':new Date('2020-10-14'),'student_id':[1,2,3,4,5,6,7,8,9,10]},
                    {'id':4,'company_name':'TCS','date':new Date('2020-10-17'),'student_id':[1,2,9,10,11,12,13,14,15]},
                    {'id':5,'company_name':'google','date':new Date('2020-10-19'),'student_id':[1,2,3,4]},
                    {'id':6,'company_name':'Meta','date':new Date('2020-10-20'),'student_id':[6,7,8,9,10,11,12,13,14,15]},
                    {'id':7,'company_name':'IBM','date':new Date('2020-10-24'),'student_id':[9,10,11,12,13,14,15]},
                    {'id':8,'company_name':'capgemini','date':new Date('2020-10-27'),'student_id':[7,8,9,10,11,12,13,14,15]},
                    {'id':9,'company_name':'abcd','date':new Date('2020-10-12'),'student_id':[4,5,6,7,8,9,10,11,12,13,14,15]},
                    {'id':10,'company_name':'microsoft','date':new Date('2020-10-09'),'student_id':[1,2,3,4,5]}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f09f803c6c6cbe664bec48'),
                        '1': ObjectId('65f09f803c6c6cbe664bec49'),
                        '2': ObjectId('65f09f803c6c6cbe664bec4a'),
                        '3': ObjectId('65f09f803c6c6cbe664bec4b'),
                        '4': ObjectId('65f09f803c6c6cbe664bec4c'),
                        '5': ObjectId('65f09f803c6c6cbe664bec4d'),
                        '6': ObjectId('65f09f803c6c6cbe664bec4e'),
                        '7': ObjectId('65f09f803c6c6cbe664bec4f'),
                        '8': ObjectId('65f09f803c6c6cbe664bec50'),
                        '9': ObjectId('65f09f803c6c6cbe664bec51')
                    }
                    }


mentors---------> collections:


                    db.mentors.insertMany([{'id':1,'menror_name':'stephen','email':'stephen147@gmail.com','student_id':[1,2,3,4,5,6,7,8,9,10]},
                    {'id':2,'menror_name':'ganesh','email':'ganesen17@gmail.com','student_id':[11,12,13,14,15,16,17,18,19,20]},
                    {'id':3,'menror_name':'vignesh','email':'vignesh123@gmail.com','student_id':[21,22,23,24,25,26,27,28,29,30]},
                    {'id':4,'menror_name':'selvaraj','email':'selva847@gmail.com','student_id':[31,32,33,34,35,36,37,38,39,40]},
                    {'id':5,'menror_name':'thamburaj','email':'thambu427@gmail.com','student_id':[41,42,43,44,45,46,47,48,49,50]},
                    {'id':6,'menror_name':'hariharen','email':'hari12147@gmail.com','student_id':[51,52,53,54,55,56,57,58,59,60]},
                    {'id':7,'menror_name':'muthukumar','email':'muthu47@gmail.com','student_id':[61,62,63,64,65,66,67,68,69,70]},
                    {'id':8,'menror_name':'pasupathy','email':'pasupathi148@gmail.com','student_id':[71,72,73,74,75,76,77,78,79,80]},
                    {'id':9,'menror_name':'suresh','email':'suresh147@gmail.com','student_id':[81,82,83,84,85,86,87,88,89,90]},
                    {'id':10,'menror_name':'puzhal','email':'puzhal147@gmail.com','student_id':[91,92,93,94,95,96,97,98,99,100]}]);
                    {
                    acknowledged: true,
                    insertedIds: {
                        '0': ObjectId('65f0a24f3c6c6cbe664bec52'),
                        '1': ObjectId('65f0a24f3c6c6cbe664bec53'),
                        '2': ObjectId('65f0a24f3c6c6cbe664bec54'),
                        '3': ObjectId('65f0a24f3c6c6cbe664bec55'),
                        '4': ObjectId('65f0a24f3c6c6cbe664bec56'),
                        '5': ObjectId('65f0a24f3c6c6cbe664bec57'),
                        '6': ObjectId('65f0a24f3c6c6cbe664bec58'),
                        '7': ObjectId('65f0a24f3c6c6cbe664bec59'),
                        '8': ObjectId('65f0a24f3c6c6cbe664bec5a'),
                        '9': ObjectId('65f0a24f3c6c6cbe664bec5b')
                    }
                    }


1. Find all the topics and tasks which are thought in the month of October.

        zenclass> db.tasks.find({'date':{$gte:ISODate('2020-10-01'),$lt:ISODate('2020-10-31')}});
                    [
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec3e'),
                        task_id: 1,
                        name: 'HTML',
                        description: 'to design forms',
                        date: ISODate('2020-10-16T00:00:00.000Z'),
                        submitted: [ 1, 3, 4, 5 ],
                        not_submitted: [ 2 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec3f'),
                        task_id: 2,
                        name: 'CSS',
                        description: 'to design page resposiveness',
                        date: ISODate('2020-10-17T00:00:00.000Z'),
                        submitted: [ 1, 3, 5 ],
                        not_submitted: [ 2, 4 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec40'),
                        task_id: 3,
                        name: 'Javascript',
                        description: 'to fetch the data from rest api',
                        date: ISODate('2020-10-18T00:00:00.000Z'),
                        submitted: [ 3, 4, 5 ],
                        not_submitted: [ 1, 2 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec41'),
                        task_id: 4,
                        name: 'reactJS',
                        description: 'using router in ecommes web sites',
                        date: ISODate('2020-10-19T00:00:00.000Z'),
                        submitted: [ 1, 2, 3, 4 ],
                        not_submitted: [ 5 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec42'),
                        task_id: 5,
                        name: 'java',
                        description: 'libery management sysyem',
                        date: ISODate('2020-10-20T00:00:00.000Z'),
                        submitted: [ 1, 4, 5 ],
                        not_submitted: [ 2, 3 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec43'),
                        task_id: 6,
                        name: 'SQL',
                        description: 'write a joind query',
                        date: ISODate('2020-10-21T00:00:00.000Z'),
                        submitted: [ 1, 2, 3 ],
                        not_submitted: [ 4, 5 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec44'),
                        task_id: 7,
                        name: 'MongoDb',
                        description: 'to create collections',
                        date: ISODate('2020-10-22T00:00:00.000Z'),
                        submitted: [ 1, 3, 4, 5 ],
                        not_submitted: [ 2 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec45'),
                        task_id: 8,
                        name: 'python',
                        description: 'crud operation',
                        date: ISODate('2020-10-23T00:00:00.000Z'),
                        submitted: [ 1, 5 ],
                        not_submitted: [ 2, 3, 4 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec46'),
                        task_id: 9,
                        name: 'sprig boot',
                        description: 'to connect DBMS',
                        date: ISODate('2020-10-24T00:00:00.000Z'),
                        submitted: [ 1, 3, 4, 5 ],
                        not_submitted: [ 2 ]
                    },
                    {
                        _id: ObjectId('65f09b5d3c6c6cbe664bec47'),
                        task_id: 10,
                        name: 'php',
                        description: 'to write a code on php',
                        date: ISODate('2020-10-25T00:00:00.000Z'),
                        submitted: [ 1, 3, 4, 5 ],
                        not_submitted: [ 2 ]
                    }
                    ]
        zenclass> db.topics.find({'date':{$gte:ISODate('2020-10-01'),$lt:ISODate('2020-10-31')}});
                    [
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2a'),
                        id: 1,
                        name: 'HTML',
                        description: 'HTML',
                        date: ISODate('2020-10-15T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2b'),
                        id: 2,
                        name: 'CSS',
                        description: 'CSS',
                        date: ISODate('2020-10-16T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2c'),
                        id: 3,
                        name: 'Javascript',
                        description: 'Javascript',
                        date: ISODate('2020-10-17T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2d'),
                        id: 4,
                        name: 'ReactJS',
                        description: 'ReactJS',
                        date: ISODate('2020-10-18T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2e'),
                        id: 5,
                        name: 'nodeJS',
                        description: 'nodeJS',
                        date: ISODate('2020-10-19T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec2f'),
                        id: 6,
                        name: 'Java',
                        description: 'java',
                        date: ISODate('2020-10-20T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec30'),
                        id: 7,
                        name: 'python',
                        description: 'python',
                        date: ISODate('2020-10-21T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec31'),
                        id: 8,
                        name: 'MYSQL',
                        description: 'MYSQL',
                        date: ISODate('2020-10-22T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec32'),
                        id: 9,
                        name: 'MongoDB',
                        description: 'MongoDB',
                        date: ISODate('2020-10-23T00:00:00.000Z')
                    },
                    {
                        _id: ObjectId('65f096963c6c6cbe664bec33'),
                        id: 10,
                        name: 'spring_boot',
                        description: 'spring_boot',
                        date: ISODate('2020-10-24T00:00:00.000Z')
                    }
                    ]
2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020.

        zenclass> db.company_drives.find({'date':{$gte:ISODate('2020-10-15'),$lt:ISODate('2020-10-31')}});
                    [
                    {
                        _id: ObjectId('65f09f803c6c6cbe664bec4b'),
                        id: 4,
                        company_name: 'TCS',
                        date: ISODate('2020-10-17T00:00:00.000Z'),
                        student_id: [
                        1,  2,  9, 10, 11,
                        12, 13, 14, 15
                        ]
                    },
                    {
                        _id: ObjectId('65f09f803c6c6cbe664bec4c'),
                        id: 5,
                        company_name: 'google',
                        date: ISODate('2020-10-19T00:00:00.000Z'),
                        student_id: [ 1, 2, 3, 4 ]
                    },
                    {
                        _id: ObjectId('65f09f803c6c6cbe664bec4d'),
                        id: 6,
                        company_name: 'Meta',
                        date: ISODate('2020-10-20T00:00:00.000Z'),
                        student_id: [
                        6,  7,  8,  9, 10,
                        11, 12, 13, 14, 15
                        ]
                    },
                    {
                        _id: ObjectId('65f09f803c6c6cbe664bec4e'),
                        id: 7,
                        company_name: 'IBM',
                        date: ISODate('2020-10-24T00:00:00.000Z'),
                        student_id: [
                        9, 10, 11, 12,
                        13, 14, 15
                        ]
                    },
                    {
                        _id: ObjectId('65f09f803c6c6cbe664bec4f'),
                        id: 8,
                        company_name: 'capgemini',
                        date: ISODate('2020-10-27T00:00:00.000Z'),
                        student_id: [
                        7,  8,  9, 10, 11,
                        12, 13, 14, 15
                        ]
                    }
                    ]
3. Find all the company drives and students who are appeared for the placement.

        zenclass> db.company_drives.find({},{'_id':0,'company_name':1,'student_id':1});
                    [
                    {
                        company_name: 'zoho',
                        student_id: [
                        1,  2,  3,  4,  5,  6,
                        7,  8,  9, 10, 11, 12,
                        13, 14, 15
                        ]
                    },
                    {
                        company_name: 'CTS',
                        student_id: [
                        9, 10, 11, 12,
                        13, 14, 15
                        ]
                    },
                    {
                        company_name: 'Amazon',
                        student_id: [
                        1, 2, 3, 4,  5,
                        6, 7, 8, 9, 10
                        ]
                    },
                    {
                        company_name: 'TCS',
                        student_id: [
                        1,  2,  9, 10, 11,
                        12, 13, 14, 15
                        ]
                    },
                    { company_name: 'google', student_id: [ 1, 2, 3, 4 ] },
                    {
                        company_name: 'Meta',
                        student_id: [
                        6,  7,  8,  9, 10,
                        11, 12, 13, 14, 15
                        ]
                    },
                    {
                        company_name: 'IBM',
                        student_id: [
                        9, 10, 11, 12,
                        13, 14, 15
                        ]
                    },
                    {
                        company_name: 'capgemini',
                        student_id: [
                        7,  8,  9, 10, 11,
                        12, 13, 14, 15
                        ]
                    },
                    {
                        company_name: 'abcd',
                        student_id: [
                        4,  5,  6,  7,  8,
                        9, 10, 11, 12, 13,
                        14, 15
                        ]
                    },
                    { company_name: 'microsoft', student_id: [ 1, 2, 3, 4, 5 ] }
                    ]
4. Find the number of problems solved by the user in codekata.

        zenclass> db.users.aggregate({$project:{'_id':0,'user_name':1,'no_of_prob_solved':{$size:'$codekata_solved'}}});
                    [
                    { user_name: 'bala', no_of_prob_solved: 10 },
                    { user_name: 'gokul NS', no_of_prob_solved: 4 },
                    { user_name: 'manikandan', no_of_prob_solved: 4 },
                    { user_name: 'naveenkumar', no_of_prob_solved: 4 },
                    { user_name: 'dharumkumar', no_of_prob_solved: 5 },
                    { user_name: 'dinesh', no_of_prob_solved: 3 },
                    { user_name: 'ramkumar', no_of_prob_solved: 6 }
                    ]
5. Find all the mentors with who has the mentee's count more than 15.

        zenclass> db.mentors.find({$where:'this.student_id.length > 15'},{'_id':0,'menror_name':1});
                    [ { menror_name: 'stephen_jebakumar' }, { menror_name: 'kannan' } ]

6. Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020.

        zenclass> db.attendance.aggregate({$match:{'date':{$gte:ISODate('2020-10-15'),$lt:ISODate('2020-10-31')}}},{$project:{_id:0,date:1,no_of_absent:{$size:'
$absent'}}});
                    [
                    { date: ISODate('2020-10-15T00:00:00.000Z'), no_of_absent: 1 },
                    { date: ISODate('2020-10-16T00:00:00.000Z'), no_of_absent: 2 },
                    { date: ISODate('2020-10-17T00:00:00.000Z'), no_of_absent: 2 },
                    { date: ISODate('2020-10-18T00:00:00.000Z'), no_of_absent: 1 },
                    { date: ISODate('2020-10-19T00:00:00.000Z'), no_of_absent: 3 },
                    { date: ISODate('2020-10-20T00:00:00.000Z'), no_of_absent: 2 },
                    { date: ISODate('2020-10-21T00:00:00.000Z'), no_of_absent: 1 },
                    { date: ISODate('2020-10-22T00:00:00.000Z'), no_of_absent: 2 },
                    { date: ISODate('2020-10-23T00:00:00.000Z'), no_of_absent: 1 },
                    { date: ISODate('2020-10-24T00:00:00.000Z'), no_of_absent: 3 }
                    ]


        zenclass> db.tasks.aggregate({$match:{'date':{$gte:ISODate('2020-10-15'),$lt:ISODate('2020-10-31')}}},{$project:{_id:0,name:1,date:1,no_of_not_submitted:{$size:'$not_submitted'}}});
                    [
                    {
                        name: 'HTML',
                        date: ISODate('2020-10-16T00:00:00.000Z'),
                        no_of_not_submitted: 1
                    },
                    {
                        name: 'CSS',
                        date: ISODate('2020-10-17T00:00:00.000Z'),
                        no_of_not_submitted: 2
                    },
                    {
                        name: 'Javascript',
                        date: ISODate('2020-10-18T00:00:00.000Z'),
                        no_of_not_submitted: 2
                    },
                    {
                        name: 'reactJS',
                        date: ISODate('2020-10-19T00:00:00.000Z'),
                        no_of_not_submitted: 1
                    },
                    {
                        name: 'java',
                        date: ISODate('2020-10-20T00:00:00.000Z'),
                        no_of_not_submitted: 2
                    },
                    {
                        name: 'SQL',
                        date: ISODate('2020-10-21T00:00:00.000Z'),
                        no_of_not_submitted: 2
                    },
                    {
                        name: 'MongoDb',
                        date: ISODate('2020-10-22T00:00:00.000Z'),
                        no_of_not_submitted: 1
                    },
                    {
                        name: 'python',
                        date: ISODate('2020-10-23T00:00:00.000Z'),
                        no_of_not_submitted: 3
                    },
                    {
                        name: 'sprig boot',
                        date: ISODate('2020-10-24T00:00:00.000Z'),
                        no_of_not_submitted: 1
                    },
                    {
                        name: 'php',
                        date: ISODate('2020-10-25T00:00:00.000Z'),
                        no_of_not_submitted: 1
                    }
                    ]
zenclass>

